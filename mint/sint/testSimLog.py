import simlog
import numpy as np

# scipy.savemat doesn't play well with unicode in Windows so let's make it ascii
def byteify(input):
    if isinstance(input, dict):
        return {byteify(key): byteify(value)
                for key, value in input.iteritems()}
    elif isinstance(input, list):
        return [byteify(element) for element in input]
    elif isinstance(input, unicode):
        return input.encode('utf-8')
    else:
        return input

# data_new =  {'ts_str': '2018-04-02---12-13-58', u'GDET_FEE1_241_ENRC': [[0.20636557338563935, 0.03842882300454521, 0.12721657422043647, 0.23433081918959892, 0.30417779199159356, 0.12776459070779597]], 'ObjFuncPv': 'GDET:FEE1:241:ENRC', 'NormAmpCoeff': 1.0, 'BEND_DMP1_400_BDES': 12.550145775080338, 'current': [[None, None, None, None, None, None]], 'stat_name': ['Mean'], 'Energy': 12.550145775080338, 'ts': 1522696438.47, 'QUAD_LTU1_620_BCTRL': [[-59.77, -62.758500000000005, -59.77, -59.77, -59.77]], 'charge': [[None, None, None, None, None, None]], 'QUAD_LTU1_640_BCTRL': [[54.43, 54.43, 57.1515, 57.1515, 54.43]], 'ScanAlgorithm': 'Gaussian Process', 'timestamps': [[1522695381.582, 1522695381.589, 1522695381.593, 1522695381.598, 1522695381.604, 1522695381.736]], 'DetectorStd': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}
# data_new =  {'n': np.nan, 'ts_str': '2018-04-02---12-13-58', 'QUAD_LTU1_620_BCTRL': [[-59.77, -62.758500000000005, -59.77, -59.77, -59.77]]}
data_new = {u'stat_name': ['Mean'], 'current': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'charge': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'QUAD:LTU1:640:BCTRL': [[62.920000000000002, 62.920000000000002, 66.066000000000003, 66.066000000000003, 69.212000000000003, 64.492999999999995, 66.066000000000003, 64.492999999999995, 67.63900000000001, 69.212000000000003, 67.63900000000001, 66.459249999999997, 66.852500000000006, 66.852500000000006, 67.638999999999996, 67.049125000000004, 67.835625000000007, 67.58984375, 67.344062500000007, 67.245750000000001, 67.540687500000004, 67.393218750000003, 67.442374999999998, 67.491531250000008, 67.58984375, 67.516109374999999, 67.565265625000009, 67.528398437500002, 67.540687500000004, 67.479242187500006, 67.503820312499997, 67.49767578125001, 67.399363281250004, 67.505356445312501, 67.450055664062504, 67.513037109375006, 67.46004052734375, 67.477706054687502, 67.473865722656257, 67.509196777343746, 67.500364013671884, 67.491531250000008, 67.489611083984371, 67.507276611328123, 67.494027465820309, 67.502860229492185, 67.496235656738278, 67.498443847656247, 67.499691955566405, 67.506604553222658, 67.505356445312501]], 'GDET:FEE1:241:ENRC': [[-0.0016559519467973039, 0.0013254270750432656, 0.021110179766324268, 0.0097600985938039869, -0.023460725898637996, -0.023997459583135154, 0.039029077893222748, 0.005939039992927905, 0.041441726378681418, 0.039556761158365331, -0.0057416519565916292, 0.010319707867654892, 0.0040982215845415809, -0.020225246756429387, -0.033854791588172221, 0.028538844893757617, 0.019219723999968595, 0.0063794016897479322, 0.011379450401594077, 0.033284107284168252, -0.016870981920971473, -0.014024384199286881, 0.04593740432587809, 0.013504403269426991, 0.010974358024208141, 0.034761189054373136, -0.0063193891452798696, -0.020937281507568638, 0.011976740256138787, -0.016826268300653785, -0.01458379732750674, 0.031564897118071228, -0.0038814809952538581, 0.060029686619625815, 0.046955877309854788, 0.0068313875868204737, 0.014438125964404316, 0.043592316271482467, 0.029846274662942179, 0.040726967615955817, -0.014757439581312256, 0.029327019160770865, 0.020318293819450561, -0.048398607100661413, 0.028152997450957125, 0.0009726934260478725, 0.015710787615292952, -0.046945265993737322, 0.020106031122092374, 0.037339586528231453, 0.017423235336143386]], 'timestamps': [[1522697313.38, 1522697313.387, 1522697313.391, 1522697313.396, 1522697313.401, 1522697313.407, 1522697313.41, 1522697313.415, 1522697313.418, 1522697313.422, 1522697313.425, 1522697313.427, 1522697313.431, 1522697313.436, 1522697313.439, 1522697313.443, 1522697313.446, 1522697313.45, 1522697313.453, 1522697313.456, 1522697313.461, 1522697313.464, 1522697313.467, 1522697313.471, 1522697313.475, 1522697313.479, 1522697313.484, 1522697313.489, 1522697313.495, 1522697313.502, 1522697313.507, 1522697313.514, 1522697313.52, 1522697313.526, 1522697313.532, 1522697313.536, 1522697313.54, 1522697313.544, 1522697313.549, 1522697313.553, 1522697313.556, 1522697313.561, 1522697313.564, 1522697313.568, 1522697313.571, 1522697313.574, 1522697313.578, 1522697313.581, 1522697313.586, 1522697313.592, 1522697313.599]], 'QUAD:LTU1:620:BCTRL': [[-89.599999999999994, -85.11999999999999, -89.599999999999994, -85.11999999999999, -89.599999999999994, -86.239999999999995, -87.359999999999999, -87.359999999999999, -89.599999999999994, -90.719999999999999, -87.359999999999999, -89.039999999999992, -88.47999999999999, -89.599999999999994, -88.47999999999999, -89.319999999999993, -90.439999999999998, -89.949999999999989, -89.459999999999994, -89.039999999999992, -89.179999999999993, -89.390000000000001, -89.319999999999993, -89.530000000000001, -89.390000000000001, -89.49499999999999, -89.424999999999997, -89.477499999999992, -89.459999999999994, -89.407499999999999, -89.372499999999988, -89.381249999999994, -89.241249999999994, -89.405312499999994, -89.344062499999993, -89.429374999999993, -89.347343749999993, -89.374687499999993, -89.362656250000001, -89.417343750000001, -89.403671875000001, -89.390000000000001, -89.383984374999997, -89.411328124999997, -89.390820312499997, -89.404492187499997, -89.394238281249997, -89.397656249999997, -89.398066406249995, -89.405722656249992, -89.405312499999994]], 'DetectorStd': [[0.010497163341772395, 0.014784500964193171, 0.0061343664849454966, 0.026082717059205493, 0.032016063377311291, 0.00093786363019197905, 0.01290042517059768, 0.011781703902034377, 0.016119377706337045, 0.077461157411401624, 0.050975687103420458, 0.025592232872618331, 0.034949743339556555, 0.0097464636907025285, 0.0017438585207163668, 0.054269692899815355, 0.034907964750301064, 0.0025524047910041696, 0.035855214120806403, 0.041855988131876777, 0.030423411983071511, 0.035054143456476207, 0.0073439654479682953, 0.003315303776240194, 0.0050551660177687047, 0.010081256683825429, 0.0098281135913797016, 0.022018063426458335, 0.018477529623095498, 0.030636969117680324, 0.019290837959133875, 0.039835435598790166, 0.027900116778117753, 0.011212148872079157, 0.010158045168989063, 0.0099436127542217295, 0.015183531293878481, 0.013182794570306983, 0.0018431511602305852, 0.0062017072842822339, 0.021103599192196169, 0.019735777496331902, 0.017390393586119927, 0.022648467366739745, 0.028882692787955473, 0.020917852084117172, 0.029951506962777756, 0.015087921861568841, 0.0098847107661089745, 0.0016391373656028697, 0.011793364729288403]]}
data_new = dict([(byteify(e[0]),e[1]) for e in data_new.items()])

simlog.save("test",data_new,path='default')